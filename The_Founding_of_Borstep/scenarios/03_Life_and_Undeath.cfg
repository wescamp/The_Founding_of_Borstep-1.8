#textdomain wesnoth-The_Founding_of_Borstep

# Every orcish unit that is killed is changed into a ghost (assuming the
# necromancer is alive, which he should be). The level of the ghost will be the
# same as the original unit. The ghost will also keep all experience, and level
# immediately if it has enough.

[scenario]
	[story]
		[part]
			story= _ "The forests in this area had plenty of food, so the orcs stayed for several weeks though they were uncomfortable staying in a place that was so exposed and difficult to defend. Krag-Ubor had a destination in mind, so soon the orcs continued south. After traveling only a short distance, they encountered elves arguing with a human. It was strange to see a human this far north, but Krag-Ubor didn't ponder the oddity for long because his people were hungry again."
		[/part]
		[part]
			background=early_farnorth.jpg
			show_title=yes
			{OLD_BATTLE 732 232}
			{OLD_BATTLE 754 297}
			{NEW_BATTLE 732 355}
		[/part]
	[/story]
	
	name= _ "Life and Undeath"
	map_data="{~add-ons/The_Founding_of_Borstep/maps/Life_and_Undeath.map}"

	id=Life_and_Undeath
	next_scenario=The_Law

	turns=30
	{DEFAULT_SCHEDULE}
	{VICTORY_AND_DEFEAT_MUSIC}

	[event]
		name=prestart
		
		[objectives]
			side=1
			[objective]
				description= _ "Defeat enemy leader."
				condition=win
			[/objective]
			
			{HOW_TO_LOSE}
			
			note={EARLY_FINISH_BONUS_NOTE}+{NEW_GOLD_CARRYOVER_NOTE_40}
		[/objectives]
		
		# Number of merman villages captured
		[set_variable]
			name=villages_captured
			value=0
		[/set_variable]
		[set_variable]
			name=seen_mermen
			value=no
		[/set_variable]
		
		{RECALL_LOYAL_UNITS}
	[/event]

	[side]
		{SIDE_1}
		#wmllint recognize Krag-Ubor
		{GOLD 160 160 160}
	[/side]
	
	[side]
		side=2
		colour=purple
		controller=ai
		team_name=orcs
		user_team_name= _ "Undead Allies"
		type=Necromancer
		name=Ras-Tahban
		id=Ras-Tahban
		canrecruit=yes
		[modifications]
			{TRAIT_INTELLIGENT}
			{TRAIT_RESILIENT}
		[/modifications]
		gold=22
		recruit=Skeleton
		[ai]
			passive_leader_shares_keep=yes
		[/ai]
		{FLAG_VARIANT undead}
	[/side]
	
	[side]
		side=3
		colour=blue
		type=Elvish Enchantress
		user_team_name= _ "Elves"
		team_name=elves
		name=Fathiel
		id=Fathiel
		facing=sw
		controller=ai
		canrecruit=yes
		recruit=Elvish Scout, Elvish Archer,Elvish Shaman, Elvish Fighter, Wose, Elvish Marksman, Elvish Hero, Elvish Rider, Elvish Sorceress
		income=14
		{GOLD 430 500 600}
		[ai]
			turns=1
			recruitment_pattern=archer,scout,scout
			village_value=3
		[/ai]
		[ai]
			turns=2-99
			recruitment_pattern=fighter,archer,archer,scout,healer
			village_value=3
		[/ai]
	[/side]
	
	[side]
		side=4
		colour=teal
		no_leader=yes
		controller=ai
		user_team_name= _ "Mermen"
		team_name=elves
	[/side]

#ifdef EASY
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Archer) 4}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Marksman) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Hero) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Rider) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Sorceress) 1}
#endif
#ifdef NORMAL
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Archer) 5}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Marksman) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Hero) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Rider) 1}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Sorceress) 2}
#endif
#ifdef HARD
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Marksman) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Hero) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Rider) 2}
		{LIMIT_CONTEMPORANEOUS_RECRUITS 3 (Elvish Sorceress) 2}
#endif
	
	{STARTING_VILLAGES 1 5}
	{STARTING_VILLAGES 2 5}
	{STARTING_VILLAGES 3 5}
	
	[event]
		name=prestart
		
        [role]
            side=1
            [filter_wml]
                upkeep=full
            [/filter_wml]
            type=Goblin Impaler,Goblin Rouser,Goblin Spearman,Wolf Rider,Goblin Pillager,Goblin Knight,Direwolf Rider,Orcish Assassin,Orcish Grunt,Orcish Archer,Orcish Slayer,Orcish Crossbowman
            role=objector
        [/role]
        [recall]
            role=objector
        [/recall]
        
		[unit]
			side=2
			type=Skeleton
			x,y=4,11
		[/unit]
		[unit]
			side=3
			type=Elvish Ranger
			x,y=48,19
			name=Gaemore
			id=Glaemore
			facing=sw
			ai_special=guardian
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_DEXTROUS}
			[/modifications]
		[/unit]
		[unit]
			side=3
			type=Elvish Ranger
			x,y=47,20
			name=Elrias
			id=Elrias
			facing=sw
			ai_special=guardian
			[modifications]
				{TRAIT_LOYAL}
				{TRAIT_STRONG}
			[/modifications]
		[/unit]
	[/event]
	
	[event]
		name=start
		
		[message]
			speaker=Fathiel
			message= _ "Death is the only punishment for bringing such corruption to our forest."
		[/message]
		[message]
			speaker=Ras-Tahban
			message= _ "But I am only attempting to understand what...Orcs!"
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "We're going to hunt here, and we'll kill anyone who stands in our way."
		[/message]
		[message]
			speaker=Fathiel
			message= _ "You'll not kill anything in our forests, foul creature!"
		[/message]
		[message]
			speaker=Ras-Tahban
			message= _ "Orc, it seems that we have a common enemy. I don't care what you do in the forest, so as long as you leave me alone in my tower to do my experiments."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "What's to stop us from taking your tower too?"
		[/message]
		[message]
			speaker=Ras-Tahban
			message= _ "Certainly you could, friend orc, but I know many useful secrets about life and death."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "We don't need any secrets."
		[/message]
		[message]
			speaker=Ras-Tahban
			message= _ "But perhaps undead warriors would be useful! If you assist me in defeating the elves, I will raise from the dead any fallen soldier of yours. You can't die yourself, or you will lose your will, but the spirits of your companions will obey your commands."
		[/message]
		[message]
			role=objector
			message= _ "Uh, boss? Why don't we just move along."
		[/message]
		[message]
			speaker=Krag-Ubor
			message= _ "Shut up, you! I like this plan."
		[/message]
		[message]
			speaker=narrator
			message= _ "Any unit that dies during this scenario will be replaced by a ghost of the same level. The unit will keep any experience it has, and level up immediately if it has enough to do so."
			image=wesnoth-icon.png
		[/message]
	[/event]

	[event]
		name=die
		[filter]
			id=Ras-Tahban
		[/filter]
		
		[message]
			speaker=Krag-Ubor
			message= _ "Curses! Now we won't get ghosts any more."
		[/message]
	[/event]

# This event turns living orcs into ghosts.
	[event]
		name=die
		first_time_only=no
		
		[filter]
			side=1
			[not]
				id=Krag-Ubor
			[/not]
			[not]
				race=undead
			[/not]
		[/filter]
		
		# Only Ras-Tahban can raise the dead, so he must be alive:
		[if]
			[have_unit]
				id=Ras-Tahban
			[/have_unit]
			
			[then]
				# The ghost will start with the same experience as the unit:
				[set_variable]
					name=ghost_experience
					value=$unit.experience
				[/set_variable]
				[set_variable]
					name=ghost_level
					value=$unit.level
				[/set_variable]
		
				# The amount of experience may not have been enough to
				# advance an orc to the next level, but it may do that for a
				# ghost. We'll check for that. "If's" are used instead of
				# [switch] because it *might* have to level twice (in the
				# case of a very experienced witch doctor or level 1 goblin),
				# so we need to keep checking:
				[if]
					[variable]
						name=ghost_level
						equals=0
					[/variable]
					[then]
						[if]
							[variable]
								name=ghost_experience
								greater_than_equal_to=18
							[/variable]
							[then]
								[set_variable]
									name=ghost_experience
									add=-18
								[/set_variable]
								[set_variable]
									name=ghost_level
									value=1
								[/set_variable]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=ghost_level
						equals=1
					[/variable]
					[then]
						[if]
							[variable]
								name=ghost_experience
								greater_than_equal_to=30
							[/variable]
							[then]
								[set_variable]
									name=ghost_experience
									add=-30
								[/set_variable]
								[set_variable]
									name=ghost_level
									value=2
								[/set_variable]
							[/then]
						[/if]
					[/then]
				[/if]
				
				[if]
					[variable]
						name=ghost_level
						equals=2
					[/variable]
					[then]
						[if]
							[variable]
								name=ghost_experience
								greater_than_equal_to=100
							[/variable]
							[then]
								[set_variable]
									name=ghost_experience
									add=-100
								[/set_variable]
								[set_variable]
									name=ghost_level
									value=3
								[/set_variable]
							[/then]
						[/if]
					[/then]
				[/if]

				# Based on the updated ghost level, set the type. The player
				# gets to choose the type for level 2 and 3:
				[switch]
					variable=ghost_level
					[case]
						value=0
						[set_variable]
							name=ghost_type
							value=Spook
						[/set_variable]
					[/case]
					
					[case]
						value=1
						[set_variable]
							name=ghost_type
							value=Ghost
						[/set_variable]
					[/case]
				
					[case]
						value=2
						[message]
							speaker=narrator
							message= _ "What should our unit become?"
							image=choices/level_2_ghosts.png
							[option]
								message= _ "Wraith  (melee: 6-4 arcane, drains; ranged: 4-3 cold; HP: 25)"
								[command]
									[set_variable]
										name=ghost_type
										value=Wraith
									[/set_variable]
								[/command]
							[/option]
							[option]
								message= _ "Shadow  (melee: 8-3 blade, backstab; nightstalk, skirmisher;  HP: 24)"
								[command]
									[set_variable]
										name=ghost_type
										value=Shadow
									[/set_variable]
								[/command]
							[/option]
						[/message]
					[/case]
					
					[case]
						value=3
						[message]
							speaker=narrator
							message= _ "What should our unit become?"
							image=choices/level_3_ghosts.png
							[option]
								message= _ "Spectre  (melee: 9-4 arcane, drains; ranged: 6-3 cold; HP: 33)"
								[command]
									[set_variable]
										name=ghost_type
										value=Spectre
									[/set_variable]
								[/command]
							[/option]
							[option]
								message= _ "Nightgaunt  (melee: 10-3 blade, backstab; nightstalk, skirmisher;  HP: 35)"
								[command]
									[set_variable]
										name=ghost_type
										value=Nightgaunt
									[/set_variable]
								[/command]
							[/option]
						[/message]
					[/case]
				[/switch]
				
				# We have enough information now, so remove the dying unit,
				# and make the ghost:
				[kill]
					id=$unit.id
				[/kill]
				
				[if]
					[variable]
						name=unit.upkeep
						equals=loyal
					[/variable]
					[then]
						[unit]
							type=$ghost_type
							x=$unit.x
							y=$unit.y
							name= _ "$unit.name|'s Ghost"
							experience=$ghost_experience
							id=$unit.id
							[modifications]
								{TRAIT_LOYAL}
							[/modifications]
							overlays=misc/loyal-icon.png
							moves=0
							attacks_left=0
							animate=yes
						[/unit]
					[/then]
					[else]
						[unit]
							type=$ghost_type
							x=$unit.x
							y=$unit.y
							name= _ "$unit.name|'s Ghost"
							experience=$ghost_experience
							moves=0
							attacks_left=0
							animate=yes
						[/unit]
					[/else]
				[/if]
				
				[clear_variable]
					name=ghost_type
				[/clear_variable]
				[clear_variable]
					name=ghost_experience
				[/clear_variable]
				[clear_variable]
					name=ghost_level
				[/clear_variable]
			[/then]
		[/if]
	[/event]
	
# This event triggers if an elf is the first to capture a merman village (which
# will almost certainly be the case). It is just a discussion with a merman
# who goes away when they are done talking.
	[event]
		name=capture
		
		[filter]
			side=3
			[filter_location]
				terrain=Ww^Vm,Ss^Vm  # Merman village
			[/filter_location]
		[/filter]
		
		[if]
			[variable]
				name=seen_mermen
				not_equals=yes
			[/variable]
			[then]
				[unit]
					type=Merman Fighter
					x=$x1
					y=$y1
					side=4
					id=first_merman
				[/unit]
				[message]
					speaker=first_merman
					message= _ "Ho there, elf! What is going on?"
				[/message]
				[message]
					speaker=$unit.id
					message= _ "We are under attack by new creatures that foul the water and burn the trees."
				[/message]
				[message]
					speaker=first_merman
					message= _ "Do you creatures deny this charge?"
				[/message]
				[message]
					speaker=Krag-Ubor
					message= _ "Nope. We're orcs and we're takin' over these woods!"
				[/message]
				[message]
					speaker=first_merman
					message= _ "This looks unpleasant, friend elf."
				[/message]
				[message]
					speaker=Fathiel
					message= _ "We will repell this foul invasion if you allow us to use your villages."
				[/message]
				[message]
					speaker=first_merman
					message= _ "Agreed. But, if the orcs try to take one of our villages, they will find it well defended from the water."
				[/message]
				[clear_variable]
					name=first_merman
				[/clear_variable]
				[set_variable]
					name=seen_mermen
					value=yes
				[/set_variable]
				[kill]
					id=first_merman
				[/kill]
			[/then]
		[/if]
	[/event]

# This event spawns angry mermen when an orc or skeleton takes a water village.
# If an orc is somehow the first to take a merman village, there will also be a
# brief discussion with the first merman to emerge.
	[event]
		name=capture
		first_time_only=no
		
		[filter]
			[filter_location]
				terrain=Ww^Vm,Ss^Vm  # Merman village
			[/filter_location]
			[and]
				side=1
				[or]
					side=2
				[/or]
			[/and]
		[/filter]
		
		# Check to see if the village has been captured before.
		# First, get the location:
		[set_variable]
			name=already_captured
			value=no
		[/set_variable]
		[set_variable]
			name=village_location
			value=$x1|_$y1
		[/set_variable]

		# Loop through the previously captured villages to see if that location
		# has already been stored:
		{FOREACH previously_captured_villages loop}
			[if]

				[variable]
					name=village_location
					equals=$previously_captured_villages[$loop].location
				[/variable]

				[then]
					[set_variable]
						name=already_captured
						value=yes
					[/set_variable]
				[/then]
			[/if]
		{NEXT loop}

		# If the village's location was not found in the array, it hasn't been
		# captured yet, so pop out the fish:
		[if]
			[variable]
				name=already_captured
				equals=no
			[/variable]
			[then]
				# Note that it *is* captured over now by saving the location in
				# the array:
				[set_variable]
					name=previously_captured_villages[$villages_captured].location
					value=$x1|_$y1
				[/set_variable]

				[set_variable]
					name=villages_captured
					add=1
				[/set_variable]

				# Set the possible levels of the mermen depending on the
				# difficulty level:
#ifdef EASY
				[set_variable]
					name=merman_type
					random=Merman Fighter,Merman Hunter
				[/set_variable]
#endif

#ifdef NORMAL
				[set_variable]
					name=merman_type
					random=Merman Fighter,Merman Hunter,Merman Hunter
				[/set_variable]
#endif

#ifdef HARD
				[set_variable]
					name=merman_type
					random=Merman Fighter,Merman Hunter,Merman Hunter,Merman Warrior
				[/set_variable]
#endif

				# Store all water/swamp locations surrounding the captured
				# village, not including the village itself:
				[store_locations]
					terrain=W*,Ss*,Chs
					[and]
						x=$x1
						y=$y1
						radius=1
					[/and]
					[not]
						x=$x1
						y=$y1
					[/not]
					variable=water_hexes
				[/store_locations]

				# Put a merman on each water/swamp hex, with the discussion if
				# necessary:
				{FOREACH water_hexes hex}
					[unit]
						type=$merman_type
						side=4
						generate_name=yes
						x=$water_hexes[$hex].x
						y=$water_hexes[$hex].y
					[/unit]
					[if]
						[variable]
							name=seen_mermen
							not_equals=yes
						[/variable]
						[then]
							[store_unit]
								[filter]
									race=merman
								[/filter]
								variable=first_merman
							[/store_unit]
							[message]
								speaker=$first_merman.id
								message= _ "What in creation are you?"
							[/message]
							[message]
								speaker=$unit.id
								message= _ "We're orcs and we're takin' over these woods. Now move."
							[/message]
							[message]
								speaker=$first_merman.id
								message= _ "Taking over! You may find that harder than you think. Attack!"
							[/message]
							[message]
								speaker=Fathiel
								message= _ "We'll help you repell this foul invasion if you allow us to use your villages."
							[/message]
							[message]
								speaker=$first_merman.id
								message= _ "Agreed."
							[/message]
							[clear_variable]
								name=first_merman
							[/clear_variable]
							[set_variable]
								name=seen_mermen
								value=yes
							[/set_variable]
						[/then]
					[/if]
				{NEXT hex}

				[clear_variable]
					name=water_hexes
				[/clear_variable]
				[clear_variable]
					name=merman_types
				[/clear_variable]
				[clear_variable]
					name=random
				[/clear_variable]
				[clear_variable]
					name=already_captured
				[/clear_variable]
				[clear_variable]
					name=village_location
				[/clear_variable]
			[/then]
		[/if]
	[/event]

	[event]
		name=enemies_defeated
		[message]
			speaker=Krag-Ubor
			message= _ "Ras-Tahban! Come with us."
		[/message]
		[message]
			speaker=Ras-Tahban
			message= _ "No, I will stay here and study, but good luck to you. It will not be forgotten that orcs are friends to those who seek to understand life and death."
		[/message]
		
		[clear_variable]
			name=seen_mermen
		[/clear_variable]
		[clear_variable]
			name=villages_captured
		[/clear_variable]
		[clear_variable]
			name=previously_captured_villages
		[/clear_variable]
		
		[endlevel]
			result=victory
			bonus=yes
			{NEW_GOLD_CARRYOVER 40}
		[/endlevel]
	[/event]

	{DEFEAT_EVENTS}
[/scenario]