#textdomain wesnoth-The_Founding_of_Borstep

#define INSPECTOR
    [event]
        name=prestart
		[set_menu_item]
			description=Game State Inspector
			[command]
				[inspect]
					name="prestart"
				[/inspect]
			[/command]
		[/set_menu_item]
    [/event]
#enddef

#define SIDE_1
	side=1
	controller=human
	user_team_name= _ "Orcs"
	team_name=orcs
	
	type=Grunt Leader
	id=Krag-Ubor
	name=Krag-Ubor
	canrecruit=yes
	unrenamable=yes
	[modifications]
		{TRAIT_STRONG}
		{TRAIT_RESILIENT}
	[/modifications]
	
	recruit=Orcish Grunt, Goblin Spearman, Wolf Rider, Orcish Archer, Orcish Shaman, Orcish Assassin
#enddef

#define RECALL_LOYAL_UNITS
    [recall]
        id=Varlag
    [/recall]
    [recall]
        id=Erogrik
    [/recall]
    [recall]
		id=Durguld
	[/recall]
#enddef

#define HOW_TO_LOSE
    [objective]
        description= _ "Death of Krag-Ubor"
        condition=lose
    [/objective]
    [objective]
        description= _ "Run out of Turns"
        condition=lose
    [/objective]
#enddef

#define HOW_TO_LOSE_2
    [objective]
        description= _ "Death of Krag-Ubor"
        condition=lose
    [/objective]
    [objective]
        description= _ "Death of Durguld"
        condition=lose
    [/objective]
    [objective]
        description= _ "Run out of turns"
        condition=lose
    [/objective]
#enddef

#define DEFEAT
    [event]
        name=die
        [filter]
            id=Krag-Ulgar
        [/filter]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
    
    [event]
    	name=time over
    	[message]
			speaker=narrator
			message= _ "With their momentum lost, the orcs descend into pointless squabling no matter how many of them you punish."
			image=wesnoth-icon.png
		[/message]
    [/event]
#enddef

#define NEAREST_UNIT X Y FILTER VARIABLE
    [set_variable]
        name=distance
        value=0
    [/set_variable]

    [set_variable]
        name=unit_found
        value=no
    [/set_variable]

    # Store matching units within a radius of "distance". If nothing got stored, add one to "distance" and try again. Do this until a unit is found, or "distance" goes over the max.
    [while]
        [variable]
            name=unit_found
            equals=no
        [/variable]
        [and]
            [variable]
                name=distance
                less_than_equal_to=99  # max
            [/variable]
        [/and]

        [do]
            [store_unit]
            	{FILTER}
            	[filter]
					[not]
						x={X}
						y={Y}
					[/not]
					[not]
						id=$last_unit_id
					[/not]
					[not]  # This is being used to find a generic unit. Varlag isn't really generic enough.
						id=Varlag
					[/not]
					[filter_location]
						x={X}
						y={Y}
						radius=$distance
					[/filter_location]

                [/filter]
                variable={VARIABLE}
            [/store_unit]

            [if]
                [variable]
                    name={VARIABLE}.length
                    greater_than=0
                [/variable]
                [then]
                    [set_variable]
                        name=unit_found
                        value=yes
                    [/set_variable]
                [/then]
            [/if]

            [set_variable]
                name=distance
                add=1
            [/set_variable]
        [/do]
    [/while]

    [clear_variable]
        name=distance
    [/clear_variable]

    [clear_variable]
        name=unit_found
    [/clear_variable]
#enddef